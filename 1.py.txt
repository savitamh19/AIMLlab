import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression from sklearn.model_selection import train_test_split from sklearn.metrics import mean_squared_error

# Generate synthetic data
np.random.seed(42)
X = 2 * np.random.rand(100, 1)
y = 4 + 3 * X + np.random.randn(100, 1)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression() model.fit(X_train, y_train)

# Print model parameters print(f"Intercept: {model.intercept_[0]}") print(f"Coefficient: {model.coef_[0][0]}")

# Make predictions
y_pred = model.predict(X_test)

# Compute mean squared error
mse = mean_squared_error(y_test, y_pred) print(f"Mean Squared Error: {mse}")

# Plot the results
plt.scatter(X, y, color='blue', label='Data')
plt.plot(X, model.predict(X), color='red', linewidth=2, label='Regression Line') plt.xlabel('Feature Set X-Axis')
plt.ylabel('Target Data Set Y-Axis') plt.title('Simple Linear Regression') plt.legend()
plt.show()
