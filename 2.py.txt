import matplotlib.pyplot as plt from sklearn import datasets
from sklearn.model_selection import train_test_split from sklearn.svm import SVC
from mlxtend.plotting import plot_decision_regions

# Generate a synthetic dataset
X, y = datasets.make_classification(n_samples=100, n_features=2,
n_classes=2, n_clusters_per_class=1, n_redundant=0, random_state=42)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y,
test_size=0.2, random_state=42)

# Train an SVM classifier
svm = SVC(kernel='linear', C=1.0, random_state=42) svm.fit(X_train, y_train)

# Plot decision boundary plt.figure(figsize=(8, 6)) plot_decision_regions(X, y, clf=svm, legend=2) plt.xlabel("Feature 1")
plt.ylabel("Feature 2") plt.title("SVM Decision Boundary") plt.show()

# Print model accuracy
accuracy = svm.score(X_test, y_test) print(f"\nModel Accuracy: {accuracy * 100:.2f}% ")
